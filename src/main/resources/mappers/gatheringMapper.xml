<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.duboomom.iLikeSchool.school.gathering.dao.GatheringDAO">
	
	<insert id="insertGathering" parameterType="map">
		INSERT INTO
			`gathering`
		(
			`userId`
			, `schoolId`
			, `title`
			, `detail`
			, `announcement`
			, `createdAt`
			, `updatedAt`		
		)
		VALUE
		(
			#{userId}
			, #{schoolId}
			, #{title}
			, #{detail}
			, NULL
			, now()
			, now()
		)	
	</insert>
	<select id="selectGathering" parameterType="int" resultType="com.duboomom.iLikeSchool.school.gathering.model.Gathering">
		SELECT
			`id`
			, `userId`
			, `schoolId`
			, `title`
			, `detail`
			, `announcement`
			, `createdAt`
			, `updatedAt`
		FROM
			`gathering`
		WHERE
			`schoolId` = #{schoolId}
	</select>
	
	<insert id="insertGatheringMember" parameterType="map">
		INSERT INTO
			`gatheringMember`
		(
			`gatheringId`
			, `userId`
			, `createdAt`		
		)
		VALUE
		(
			#{gatheringId}
			, #{userId}
			, now()
		)
	</insert>
	<select id="selectMemberCount" parameterType="map" resultType="int">
		SELECT
			count(1)
		FROM
			`gatheringMember`
		WHERE
			`gatheringId` = #{gatheringId}
			AND `userId` = #{userId}
	</select>
	<insert id="insertGatheringComment" parameterType="map">
		INSERT INTO
			`gatheringComment`
		(
			`gatheringId`
			, `userId`
			, `comment`
			, `createdAt`
			, `updatedAt`		
		)
		VALUE
		(
			#{gatheringId}
			, #{userId}
			, #{comment}
			, now()
			, now()
		)
	</insert>
	<update id="updateGatheringAnnouncement" parameterType="map">
		UPDATE
			`gathering`
		SET
			`announcement` = #{announcement}
			, `updatedAt` = now()
		WHERE
			`id` = #{gatheringId}
			AND `userId` = #{userId}
	
	</update>
	
	<select id="selectGatheringById" parameterType="int" resultType="com.duboomom.iLikeSchool.school.gathering.model.Gathering">
		SELECT
			`id`
			, `userId`
			, `schoolId`
			, `title`
			, `detail`
			, `announcement`
			, `createdAt`
			, `updatedAt`
		FROM
			`gathering`
		WHERE
			`id` = #{gatheringId}
	</select>
	<select id="selectCommentByGatheringId" parameterType="int" resultType="com.duboomom.iLikeSchool.school.gathering.model.GatheringComment">
		SELECT
			`id`
			, `gatheringId`
			, `userId`
			, `comment`
			, `createdAt`
			, `updatedAt`
		FROM
			`gatheringComment`
		WHERE
			`gatheringId` = #{gatheringId}
		ORDER BY
			`createdAt`
	</select>
	
	<delete id="deleteGatheringMember" parameterType="map">
		DELETE FROM
			`gatheringMember`
		WHERE
			`gatheringId` = #{gatheringId}
			AND `userId` = #{userId}
	</delete>

</mapper>