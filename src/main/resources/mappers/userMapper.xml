<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="com.duboomom.iLikeSchool.user.dao.UserDAO">

	<insert id="insertUser" parameterType="map">
		INSERT INTO
			`user`
		(
			`loginId`
			, `password`
			, `name`
			, `nickname`
			, `email`
			, `phoneNumber`
			, `yymmdd`
			, `gender`
			, `createdAt`
			, `updatedAt`
		)
		VALUE
		(
			#{loginId}
			, #{password}
			, #{name}
			, #{nickname}
			, #{email}
			, #{phoneNumber}
			, #{birthday}
			, #{gender}
			, now()
			, now()
		)
	
	</insert>
		
	<insert id="insertUserSchool" parameterType="map">
		INSERT INTO
			`userSchool`
		(
			`userId`
			, `schoolId`
			, `createdAt`
			, `updatedAt`
		)
		VALUE
		(
			#{userId}
			, #{schoolId}
			, now()
			, now()
		)	
	</insert>
	
	<select id="selectUser" parameterType="map" resultType="com.duboomom.iLikeSchool.user.model.User">
		SELECT
			`id`
			, `loginId`
			, `password`
			, `name`
			, `nickname`
			, `email`
			, `phoneNumber`
			, `yymmdd`
			, `gender`
			, `profilePath`
			, `createdAt`
			, `updatedAt`
		FROM
			`user`
		WHERE
			`loginId` = #{loginId}
			AND `password` = #{password}
	</select>
	
	<select id="selectUserById" parameterType="int" resultType="com.duboomom.iLikeSchool.user.model.User">
		SELECT
			`id`
			, `loginId`
			, `password`
			, `name`
			, `nickname`
			, `email`
			, `phoneNumber`
			, `yymmdd`
			, `gender`
			, `profilePath`
			, `createdAt`
			, `updatedAt`
		FROM
			`user`
		WHERE
			`id` = #{id}
	</select>
	
	<select id="selectUserbyLoginId" parameterType="String" resultType="com.duboomom.iLikeSchool.user.model.User">
		SELECT
			`id`
			, `loginId`
			, `password`
			, `name`
			, `nickname`
			, `email`
			, `phoneNumber`
			, `yymmdd`
			, `gender`
			, `createdAt`
			, `updatedAt`
		FROM
			`user`
		WHERE
			`loginId` = #{loginId}
	</select>
	
	<select id="existUserByNickname" parameterType="String" resultType="boolean">
		SELECT
			count(1)
		FROM
			`user`
		WHERE
			`nickname` = #{nickname}
	</select>
	
	<select id="selectLoginId" parameterType="map" resultType="String">
		SELECT
			`loginId`
		FROM
			`user`
		WHERE
			`name` = #{name}
			AND `email` = #{email}
	</select>
	
	<select id="selectUserbyLoginIdEmail" parameterType="map" resultType="com.duboomom.iLikeSchool.user.model.User">
		SELECT
			`id`
			, `loginId`
			, `password`
			, `name`
			, `nickname`
			, `email`
			, `phoneNumber`
			, `yymmdd`
			, `gender`
			, `createdAt`
			, `updatedAt`
		FROM
			`user`
		WHERE
			`loginId` = #{loginId}
			AND `email` = #{email}
	</select>
	
	<update id="updatePasswordById" parameterType="map">
		UPDATE
			`user`
		SET
			`password` = #{password}
			, `updatedAt` = now()
		WHERE
			`id` = #{id}
	</update>
	
	<update id="updateUser" parameterType="map">
		UPDATE
			`user`
		SET
			`password` = #{password}
			, `nickname` = #{nickname}
			, `email` = #{email}
			, `phoneNumber` = #{phoneNumber}
			, `yymmdd` = #{birthday}
			, `profilePath` = #{filePath}
			, `updatedAt` = now()
		WHERE
			`id` = #{id}
	</update>
	
	<update id="updateUserSchool" parameterType="map">
		UPDATE
			`userschool`
		SET
			`userId` = #{userId}
			, `schoolId` = #{userId}
		WHERE
			`id` = #{id}
	</update>
	
	<select id="existUserSchool" parameterType="int" resultType="int">
		SELECT
			count(1)
		FROM
			`userschool`
		WHERE
			`userId` = #{userId}
	
	</select>

	<select id="selectUserSchoolbyUserId" parameterType="int" resultType="int">
		SELECT
			`schoolId`
		FROM
			`userschool`
		WHERE
			`userId` = #{userId}	
	</select>

	
</mapper>
 

