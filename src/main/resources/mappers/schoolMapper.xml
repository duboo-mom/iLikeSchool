<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="com.duboomom.iLikeSchool.school.dao.SchoolDAO">


	<insert id="insertSchool" parameterType="map">
		INSERT INTO
			`school`
		(
			`name`
			, `type`
			, `createdAt`
		)
		VALUE
		(
			#{name}
			, #{type}
			, now()
		)
	</insert>

	<select id="selectCountSchool" parameterType="String" resultType="int">
		SELECT
			count(1)
		FROM
			`school`
		WHERE
			`name` = #{name}
	
	</select>
	
	<select id="selectSchoolByName" parameterType="String" resultType="com.duboomom.iLikeSchool.school.model.School">
		SELECT
			`id`
			, `name`
			, `type`
			, `createdAt`
		FROM
			`school`
		WHERE
			`name` = #{name}	
	</select>

	<select id="selectSchoolById" parameterType="java.util.List" resultType="com.duboomom.iLikeSchool.school.model.School">
		SELECT
			`id`
			, `name`
			, `type`
			, `createdAt`
		FROM
			`school`
		WHERE
			`id` IN (
				<foreach collection="list" item="item" separator=",">
					#{item}
				</foreach>
			)

	</select>
	
	<insert id="insertSchedule" parameterType="map">
		INSERT INTO
			`schoolSchedule`
		(
			`userId`
			, `schoolId`
			, `title`
			, `locationInfo`
			, `dateInfo`
			, `detail`
			, `createdAt`
			, `updatedAt`
		)
		VALUE
		(
			#{userId}
			, #{schoolId}
			, #{title}
			, #{locationInfo}
			, #{dateInfo}
			, #{detail}
			, now()
			, now()
		)
	</insert>
	
	<insert id="insertPost" parameterType="map">
		INSERT INTO
			`schoolPost`
		(
			`userId`
			, `schoolId`
			, `content`
			, `imagePath`
			, `createdAt`
			, `updatedAt`
		)
		VALUE
		(
			#{userId}
			, #{schoolId}
			, #{content}
			, #{imagePath}
			, now()
			, now()
		)
	</insert>
	
	<select id="selectSchoolPost" parameterType="int" resultType="com.duboomom.iLikeSchool.school.model.SchoolPost">
		SELECT
			`id`
			, `userId`
			, `schoolId`
			, `content`
			, `imagePath`
			, `createdAt`
			, `updatedAt`
		FROM
			`schoolPost`
		WHERE
			`id` = #{id}
		ORDER BY
			`id` DESC;
	</select>
	
	<select id="selectSchoolPostbySchoolId" parameterType="int" resultType="com.duboomom.iLikeSchool.school.model.SchoolPost">
		SELECT
			`id`
			, `userId`
			, `schoolId`
			, `content`
			, `imagePath`
			, `createdAt`
			, `updatedAt`
		FROM
			`schoolPost`
		WHERE
			`schoolId` = #{schoolId}
		ORDER BY
			`id` DESC;
	</select>
	
	<delete id="deleteSchoolPost" parameterType="int">
		DELETE FROM
			`schoolPost`
		WHERE
			`id` = #{id}
			AND `userId` = #{userId}
	</delete>
	
	<select id="selectSchoolIdbyName" parameterType="String" resultType="int">
		SELECT
			`id`
		FROM
			`school`
		WHERE
			`name` = #{name}	
	</select>
	
	<select id="selectSchedulebySchool" parameterType="int" resultType="com.duboomom.iLikeSchool.school.model.Schedule">
		SELECT
			`id`
			, `userId`
			, `schoolId`
			, `title`
			, `locationInfo`
			, `dateInfo`
			, `detail`
			, `createdAt`
			, `updatedAt`
		FROM
			`schoolschedule`
		WHERE
			`schoolId` = #{schoolId}
	</select>
	
	<select id="selectSchoolMemberCount" resultType="com.duboomom.iLikeSchool.school.model.SchoolMember">
		SELECT
			s.id as `schoolId`, s.name as `schoolName`, count(1) as `memberCount`
		FROM
			`school` s
		INNER JOIN
			`userSchool` u
		ON
			s.id = u.schoolId
		GROUP BY
			s.id
		ORDER BY
			`memberCount` DESC
		LIMIT 3;
	</select>
	
	<select id="selectSchoolPostLimit2" resultType="com.duboomom.iLikeSchool.school.model.SchoolPost">
		SELECT
			`id`
			, `userId`
			, `schoolId`
			, `content`
			, `imagePath`
			, `createdAt`
			, `updatedAt`
		FROM
			`schoolPost`
		ORDER BY
			`id` DESC 
		LIMIT 2;
	</select>
</mapper>